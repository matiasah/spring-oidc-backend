version: '3.7'

services:

  # Frontend
  frontend:
    build:
      context: frontend
      dockerfile: dev.dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - "./frontend:/opt/frontend"
    environment:
      TZ: America/Santiago

  # Authorization service
  auth-service:
    build:
      context: backend
      dockerfile: dev.dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - "./backend/src/:/opt/backend/src/"
      - "./backend/target/:/opt/backend/target/"
      - "~/.m2/repository/:/root/.m2/repository/"
    networks:
      backend:
        aliases:
          - auth-service
    environment:
      TZ: America/Santiago
      SPRING_PROFILES_ACTIVE: dev

      # Consul properties
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500

      # MongoDB properties
      SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017

      # JPA properties
      #SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration
      #SPRING_DATASOURCE_URL: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
      #SPRING_DATASOURCE_USERNAME: sa
      #SPRING_DATASOURCE_PASSWORD: sa

      # ElasticSearch properties
      #SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jpa.JpaRepositoriesAutoConfiguration
      #SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      #SPRING_ELASTICSEARCH_USERNAME: elastic
      #SPRING_ELASTICSEARCH_PASSWORD: elastic

      # Logging properties
      LOG_LEVEL: INFO
      LOGGING_LEVEL_ROOT: INFO

      # Custom properties
      OIDC_MANAGEMENT_URL: "http://localhost:8080"
      OIDC_MANAGEMENT_DEFAULT_SERVICEACCOUNT_ENABLED: "true"
      OIDC_MANAGEMENT_DEFAULT_SERVICEACCOUNT_CLIENTID: "eb5d9c2a-b5aa-4467-b4b4-79ae82eee0d8"
      OIDC_MANAGEMENT_DEFAULT_SERVICEACCOUNT_CLIENTSECRET: "05009f8d-97d7-4601-8852-b196ba7fdf41"
      OIDC_MANAGEMENT_DEFAULT_SERVICEACCOUNT_REDIRECTURIS_0_: "http://127.0.0.1/oauth/callback"
      OIDC_MANAGEMENT_DEFAULT_AUTHORITY_ENABLED: "true"
      OIDC_MANAGEMENT_DEFAULT_USERACCOUNT_ENABLED: "true"
      OIDC_MANAGEMENT_DEFAULT_USERACCOUNT_USERNAME: "admin"
      OIDC_MANAGEMENT_DEFAULT_USERACCOUNT_PASSWORD: "admin"
      OIDC_MANAGEMENT_DEFAULT_SCOPE_ENABLED: "true"
  
  # MongoDB
  mongodb:
    image: mongo:5.0.3
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb/:/data/db
    networks:
      backend:
        aliases:
          - mongodb
    environment:
      TZ: America/Santiago

  # Elastic Search
  elastic-search:
    image: elasticsearch:8.1.2
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./data/elastic-search/:/usr/share/elasticsearch/data
    networks:
      backend:
        aliases:
          - elasticsearch
    environment:
      TZ: "America/Santiago"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: elastic
      bootstrap.memory_lock: "false"
      discovery.type: "single-node"
      xpack.security.enabled: "false"

networks:
  backend:
    name: backend